<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <bean id="messageSource"
          class="com.hwsoft.spring.MessageSource">
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="basenames">
            <list>
				<value>classpath:properties/wap-message</value>
				
				<value>classpath:properties/common-message</value>
            </list>
        </property>
    </bean>

    <!-- 必须同controller 同一个配置文件，否则将无效，仅使用jsf250安全控制, pre-post-annotations="enabled" secured-annotations="enabled"-->
    <security:global-method-security pre-post-annotations="enabled" jsr250-annotations="enabled"/>
    <!-- controller scan -->

    <context:component-scan base-package="com.hwsoft.wap">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <context:annotation-config/>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="stringHttpMessageConverter"/>
                <ref bean="jsonHttpMessageConverter"/>
                <ref bean="byteArrayMessageConverter"/>
                <ref bean="bufferedImageHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter"/>
    <bean id="jsonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
    		<property name="objectMapper">
	                <bean class="org.codehaus.jackson.map.ObjectMapper">
	                    <property name="dateFormat">
	                        <bean class="java.text.SimpleDateFormat">
	                            <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
	                        </bean>
	                    </property>
	                </bean>
	            </property>
    </bean><!--
          
    <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper">
	                <bean class="com.fasterxml.jackson.databind.ObjectMapper">
	                    <property name="dateFormat">
	                        <bean class="java.text.SimpleDateFormat">
	                            <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
	                        </bean>
	                    </property>
	                </bean>
	            </property>
	        </bean>         
          
    --><bean id="byteArrayMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
    <bean id="bufferedImageHttpMessageConverter"
          class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
   
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="defaultContentType" value="application/json"/>
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
                    <property name="prefix" value="/WEB-INF/views/"/>
                    <property name="suffix" value=".jsp"/>
                </bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <!-- 输出为JSON数据-->
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
            </list>
        </property>
    </bean>

	  
	 
    <!--文件上传--><!--
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         设置上传文件的最大尺寸为10MB 
        <property name="maxUploadSize">
            <value>10000000</value>
        </property>
    </bean>

    --><!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 --><!--
    <bean id="exceptionResolver"
          class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
            </props>
        </property>
    </bean>

--></beans>

